@model MyProject.Web.Models.UserLogin
@using System.Web.Optimization
@{
    ViewBag.Title = "Login";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="signupContainer">
    <div class="signupWrap">
        <div class="signupHeader">
            <div class="shTitle">
                log in
                <span class="shDot"></span>
            </div>
            <div class="shSubtitle">welcome back</div>
        </div>
        @Html.ValidationSummary(true)
        @using (Html.BeginForm("Index", "Login", FormMethod.Post, new { @id = "loginForm" }))
        {
            @Html.AntiForgeryToken()
            <div class="inputCont" name="username">
                <div class="inputTop">
                    <div class="inputLabel">username</div>
                </div>
                @Html.TextBoxFor(m => m.Username, new { placeholder = "your name", id = "username", name = "username" })
            </div>
            <div class="inputCont" name="password">
                <div class="inputTop">
                    <div class="inputLabel">password</div>
                </div>
                @Html.TextBoxFor(m => m.Password, new { type = "password", placeholder = "your password", id = "password", name = "password" })
            </div>
            <button class="btn primary">sign in</button>
        }

    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/validation/js")

    <script type="text/javascript">
        $(function () {

            $("#loginForm").validate({
                rules: {
                    Username: {
                        required: true
                    },
                    Password: {
                        required: true
                    }
                },
                submitHandler: function (form) {
                    form.submit();
                },
                errorPlacement: function (error, element) {
                    $(element)
                        .closest("form")
                        .find("label[for='" + element.attr("id") + "']")
                        .append(error);
                },
                errorElement: "span"
            });
        });


    </script>
}